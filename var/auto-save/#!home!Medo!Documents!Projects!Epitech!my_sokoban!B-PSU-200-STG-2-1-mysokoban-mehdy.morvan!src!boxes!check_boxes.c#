/*
** EPITECH PROJECT, 2021
** B-PSU-200-STG-2-1-mysokoban-mehdy.morvan
** File description:
** check_boxes.c
*/

#include "box.h"
#include "storages.h"
#include "my.h"
#include "map.h"

int is_there_box(int x, int y, boxes_t boxes);
int is_there_storage(int x, int y, storage_t *storages);

int win_or_lose(boxes_t boxes)
{
    int won = 1;
    int lose = 1;
    for (int i = 0; i < boxes.nb_boxes; i++) {
        if (boxes.pos_boxes[i].defeat == 0)
            won = 0;
        if (boxes.pos_boxes[i].defeat == -1) {
            won = 0;
            lose = 0;
        }
        if (boxes.pos_boxes[i].defeat == 1)
            lose = 0;
    }
    if (won)
        return 1;
    if (lose)
        return -1;
    return 0;
}

int check_if_stuck(int x, int y, map_t map)
{
    int nb_wall = 0;
    if (map.map[x - 1][y] == '#')
        nb_wall++;
    if (map.map[x + 1][y] == '#')
        nb_wall++;
    if (map.map[x][y - 1] == '#')
        nb_wall++;
    if (map.map[x][y + 1] == '#')
        nb_wall++;
    if (nb_wall >= 2)
        return 1;
    else
        return 0;
}

void update_boxes(boxes_t *boxes, storage_t *storages, map_t map)
{
    for (int i = 0; i < boxes->nb_boxes; i++) {
        int pos_x = boxes->pos_boxes[i].x;
        int pos_y = boxes->pos_boxes[i].y;
        if (check_if_stuck(pos_x, pos_y, map))
            boxes->pos_boxes[i].defeat = 0;
        if (is_there_storage(pos_x, pos_y, storages))
            boxes->pos_boxes[i].defeat = 1;
    }
}
